Velkommen
Mit navn er Lasse og jeg er en multimedie design studerende som specialisere i front development.

Min portfolie side er strukturet sådan at du kan se hvor meget jeg har flyttet mig som udvikler, 
startende med en komplex 3. semester JavAscrip-baseret opgave og afsluttende med en 1. semester
animations opgave. Naturligvis er in kode fra 1.semester ikke den mest velskrevne men jeg har
besluttet mig at inkluderer den for at understrege hvor jeg startede og også for at vise potentielle
arbejedsgivere mit potentiale for udvikling.

Jeg har en baggrund som elektriker, som har hjulpet udvikle en solid logik såvel som et 
øje for detaljer, hvilket har tjent mig godt siden jeg har sadlet om til webdeveloper verdenen.

Jeg leder i øjeblikket efter en praktikplads, så hvis min profil virker interessant & stemmer overens
med det de leder efter, så tag endelig kontakt.

++++++++++++++++++++++++++++++++++

PROJECTS

Hacked Hogwarts Student List

En komplex JavaScript baseret opgave
I denne opgave skulle vi udvikle et interface der kunne vise en liste af studerende og i denne
være i stand til at filtere, sortere såvel som udvise studerende, gøre dem til prefekter eller gøre dem 
en del af et "inquisitorial squad" under visse betingelser.

Se opgave


+++++++++++++++++++++

Skab en online tilstedeværelse for en start-up
Uvikle og kommuniker en start-ups profil ved at skabe en stærk, professionel online tilstedeværelse.

I denne opgave arbejde min gruppe og jeg med en smykke start-up ved navn Ivaldesmykker - de 
havde en eksisterende hjemmelavet WordPress side, en tom instagram konto og en facebok page 
der kun lige var blevet oprettet. Der var ingen klar sammenhæng i den måde Ivaldesmykker udtrykte
dem på online. Så vores opgave var at udvikle en Style & SoMe guide, video indhold til at promovere
dem og deres indhold. Til sidst skulle vi udvikle en ny hjemmeside og det var i denne del af processen
jeg arbejde mest.

Se opgave


+++++++++++++++++++

Animeret spil
Skab et interactivt, animeret spil ved kun at bruge HTML, CSS & JavaScript

I denne opgave skulle vi skabe et animeret spil, kun ved brug af de grundlæggende browser
teknologier, såvel som at tegne de grafiske elementer på egen hånd og optage + manipulere lydende
som vi ville bruge.

Se opave


++++++++++++++
Hacked Hogwarts Student List

I denne opgave skulle vi udvikle et interface der kunne vise en liste af studerende og i denne
være i stand til at filtere, sortere såvel som udvise studerende, gøre dem til prefekter eller gøre dem 
en del af et "inquisitorial squad" under visse betingelser.

Denne opgave var så omfattende og komplex at en grundig gennemgang er for tidskrævende, så i stedet
har jeg fokuseret på nogle kerne områder. Scroll ned og se dem eller spring til en specific funktion
som måtte fange dit blik via. bogmærkerne underneden eller se den fulde JavaScript fil til højre her(underneath).


Link til det endelige resultat

Link til det relevante GitHub repository


"At rydde op i rodet data"
Før jeg kunne gøre andet skulle der ryddes op i den data vi modtog. Det første billede her til højre (Underneath here)
kan du se hvad vi modtog og under det billede kan du se hvad hvordan det endte med at se ud, for at jeg kunne fortsætte
med at arbejde på det.

For at få dataen ryddet op konstruerede jeg en funktion hvori jeg kan loope igennem alle de studerende og 
få den opryddedet data retuneret. 

Pågældende fuktion kan ses i den indlejre funktion til højre for (underneath). I denne funktion har jeg benyttet
mig af en del array methods for at sikre mig at selv hvis den modtog et navn med et blokbogstav i midten af navnet
vil den stadig returnere navnet med kun det første bogstav som blokbogstav.

Det er herfra at jeg skabte et nyt student objekt, som blev skabt på en måde så at jeg havde
alle de nødvendige egenskaber som jeg skulle bruge i denne opgave.



"At filtrere en list af objekter"

Dette gjorde jeg ved at bruge det objekt som jeg skabte da jeg først ryddede i den modtagne data.
Du kan filtrere på en studerende hus (Såsom Gryffindor, Ravenclaw, Slytherin eller Hufflepuff) eller på om de
studerende er udviste. Derfor ser en de mine filter funktioner sådan ud, som de kan se til højre her (Underneath here).
Hvis objektet har værdien "Ravenclaw" i dette tilfælde, vil det blive returneret som true og derefter vil der være en liste 
af objekter som har denne værdi og så vil de bliv vist på listen.

"At sammenligne JSON data som indeholder efternavne, for at fastlå "blod-status".

Et krav i denne opgave var at man skulle kunne se hvad en studerendes "blod-status" er og for 
at løse dette blev jeg nødt til at håndtere to JSON filer. En af disse så vi et screnshot af
i toppen af siden, denne leverede en studerendes fulde navn og hus. JSON fil nummer to, have to arrays
som delte de studerende ind i "ren-blod" og "halv-blod" vha. deres efternav.


Efer at jeg fetchede JSON filen nummer to, skabte jeg et object med two tomme arrays indeni og døbte dem
"half" og "pure" og pushede de studerende i i disse arrays. Til højre her kan de se hvordan den funktion ser ud.
Det er en funktion med endnu en funktion nested indeni.

I mit første If-statement er der tre mulige udfald, de kan blive retuneret som "half", "full" eller "muggle". Hvad der er 
retuneret er afgjort i den nestede funktion som sammenligner et array (Som er en del af JSON fil nummer to gjort til et array) og 
så efternavnet af en given studerende. Hvis den studerende ingen steder kan er at finde, så bliver de retuneret som muggle.



+++++++++++++++++++++++++++++++++++++++++++++

Skab en online tilstedeværelse for en start-up

I denne opgave arbejde min gruppe og jeg med en smykke start-up ved navn Ivaldesmykker - de 
havde en eksisterende hjemmelavet WordPress side, en tom instagram konto og en facebok page 
der kun lige var blevet oprettet. Der var ingen klar sammenhæng i den måde Ivaldesmykker udtrykte
dem på online. Så vores opgave var at udvikle en Style & SoMe guide, video indhold til at promovere
dem og deres indhold. Til sidst skulle vi udvikle en ny hjemmeside og det var i denne del af processen
jeg arbejde mest.

Grundet dette er koden fra hjemmesiden, det som jeg vil fokuserer mest på i min gennemgang af denne opgave. Hvis 
du vil kan du se specifikke funktionaliter som jeg har fremhævet, kan du bruge bogmærkerne underneden her til at hoppe dertil.


At kode mobile-first

En af kravene fra opgaven var at den skulle være kodet efter et mobile-first-approach og dette indebærer at bruge media queries med en min-width, siden 
disse er aktive når skærmen som minimum har en specifik bredde, modsat max-width media-queries. Til højre her kan de se en codepen med de media-queries der blev
brugt i dette projekt.

Nogle af fordelene ved at bruge et mobile-first-approach er at størstedelen af bruger som vil besøge din side, gør det fra en mobil af og du kan derfor argumenterer for
at det giver mening at starte med din kode i den mobile skærm størrelse. En anden fordel er at siden er loaded med simplere kode og den avancerede kode vil blive tilføjet som
behovet opstår gennem disse media-queries.

"Dynamisk data, fetching fra en database"
Det var i dette semester at vi blev introduceret til at fetche data og at skabe en hjemmeside som blev fyldt med dynamisk data. I den codepen til venstre kan de se koden jeg
benyttede til at fetche JSON-data fra vores REST API og i slutningen er der et array af objekter der bliver sent til en funktion kaldet "handleData".

I den code-pen der er til venstre har vi to funktioner der tager sig af den modtagne JSON data, som kommer i et array af objekter. Den første funktion er kaldet handleData og den tager sig
at tage det modtagne array og køre det igennem den array-funktion der hedder .forEach og på den måde kan jeg loope igennem de enkelte objekter. Derefter bliver det finder sted er i funktionen
singlePiece. I denne kopier jeg en template fra min DOM, med cloneNode(true), hvilket gør at den kopierer hele dets subtree. Derefter er min template fyldt ud med information taget fra det 
pågældende object og til sidst bliver det vedhæftet til en tom parent node. 



++++++++++++++++++++++++++++++++++++++++++++

Animeret spil
Skab et interactivt, animeret spil ved kun at bruge HTML, CSS & JavaScript

I denne opgave skulle vi skabe et animeret spil, kun ved brug af de grundlæggende browser
teknologier, såvel som at tegne de grafiske elementer på egen hånd og optage + manipulere lydende
som vi ville bruge.

Dette spil er noget som jeg skabte efter at have studerert multimedie-design i tre måneder. Jeg har inkluderet dette spil, ikke fordi der er velskrevet og komplex kode at fremhæve
men for at sætte i perspektiv hvor langt jeg er kommet siden februar 2021 og for at understrege mit potentiale for udvikling. 

"CSS animation"
I dette tema blev vi introduceret til hvordan man kan lave CSS animationer med definerde keyframes. Vi brugte forskellige JavaScript addEventListeners, såsom ("click"), ("animationend")
og ("animationiteration") for at kontrollerer hvad der skulle ske og hvornår.

I den codepen de ser til højre er der et eksempel på en simpel animation lavet vha fire keyframes hvor at selve animation er igangsat af JavaScript. 




"Funktioner & If-statements"
Det var i dette semester at vi blev introduceret til simple funktioner & if-statements. Til venstre, kan du se hvor jeg startede med en funktion kaldet startTime, som når kaldet tjekker 
om variablen timeLeft er større end 0, hvis den er, kalder den funktionen under kaldet showTime som trækker et sekund fra samlede tid der er tilbage, såvel som at den skifter 
grafik i de to document.querySelector underneden, vha et skift i class name. Codepen til højre demonstrerer hvordan det virkede in-game.
